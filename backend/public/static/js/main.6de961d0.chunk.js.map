{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","login","logout","userId","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserID","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.6de961d0.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  token: null,\n  login: () => {},\n  logout: () => {},\n  userId: null,\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserID] = useState();\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserID(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({ userId: uid, token: token, expiration: tokenExpirationDate.toISOString() }),\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserID(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [logout, token, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from 'react';\n\nimport './MainHeader.css';\n\nfunction MainHeader(props) {\n  return <header className='main-header'>\n    {props.children}\n  </header>\n}\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nfunction NavLinks(props) {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport './SideDrawer.css';\n\nfunction SideDrawer(props) {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\">{props.children}</aside>\n    </CSSTransition>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n}\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\n\nimport './MainNavigation.css';\nimport Backdrop from '../UIElements/Backdrop';\n\nfunction MainNavigation(props) {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => setDrawerIsOpen(true);\n  const closeDrawerHandler = () => setDrawerIsOpen(false);\n  return (\n    <>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Your Places</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </>\n  );\n}\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn: !!token, token, login, logout, userId }}>\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}