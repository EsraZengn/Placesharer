{"version":3,"sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/hooks/http-hook.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js"],"names":["Map","props","mapRef","useRef","center","zoom","useEffect","MapOl","target","current","id","layers","TileLayer","source","OSM","view","View","fromLonLat","lng","lat","ref","className","style","PlaceItem","title","image","description","address","creatorId","coordinates","onDelete","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","Authorization","token","ErrorModal","onClear","Modal","show","onCancel","header","contentClass","headerClass","footerClass","footer","Button","onClick","inverse","danger","Card","LoadingSpinner","asOverlay","src","alt","userId","to","PlaceList","items","length","padding","map","place","key","creator","location","onDeletePlace","UserPlaces","places","setPlaces","useParams","responseData","getPlaces","deletePlaceId","prevPlaces","filter","href","size","children","exact","type","disabled","setIsLoading","setError","activeHttpRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","push","fetch","signal","response","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","ModalOverlay","content","onSubmit","event","preventDefault","ReactDOM","createPortal","document","getElementById","in","mountOnEnter","unmountOnExit","timeout","classNames"],"mappings":"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","file":"static/js/6.67e950e6.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport MapOl from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { fromLonLat } from 'ol/proj';\n\nimport './Map.css';\n\nfunction Map(props) {\n  const mapRef = useRef();\n  const { center, zoom } = props;\n  useEffect(() => {\n    new MapOl({\n      target: mapRef.current.id,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([center.lng, center.lat]),\n        zoom: zoom,\n      }),\n    });\n  }, [center, zoom]);\n  return <div id=\"map\" ref={mapRef} className={`map ${props.className}`} style={props.style}></div>;\n}\n\nexport default Map; \n","import React, { useState, useContext } from 'react';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport './PlaceItem.css';\n\nfunction PlaceItem({ id, title, image, description, address, creatorId, coordinates, onDelete }) {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${id}`, 'DELETE', null, {\n        Authorization: `Bearer ${auth.token}`,\n      });\n      onDelete(id);\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={address}\n        contentClass=\"place-item__modal-content\"\n        headerClass=\"place-item__modal-header\"\n        footerClass=\"place-item__modal-footer\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that this can't be undone\n          thereafter\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${image}`} alt={title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{title}</h2>\n            <h3>{address}</h3>\n            <p>{description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button onClick={openMapHandler} inverse>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === creatorId && <Button to={`/places/${id}`}>EDIT</Button>}\n            {auth.userId === creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </>\n  );\n}\n\nexport default PlaceItem;\n","import React from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport PlaceItem from './PlaceItem';\nimport './PlaceList.css';\n\nfunction PlaceList(props) {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card style={{ padding: '1rem' }}>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">SHARE PLACE</Button>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <ul className='place-list center'>\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PlaceList from '../components/PlaceList';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nfunction UserPlaces() {\n  const [places, setPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const { userId } = useParams();\n\n  useEffect(() => {\n    const getPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`,\n        );\n        setPlaces(responseData.places);\n      } catch (error) {}\n    };\n    getPlaces();\n  }, [sendRequest, userId]);\n\n  const deletedPlaceHandler = (deletePlaceId) => {\n    setPlaces((prevPlaces) => prevPlaces.filter((place) => place.id !== deletePlaceId));\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && places && <PlaceList items={places} onDeletePlace={deletedPlaceHandler} />}\n    </>\n  );\n}\n\nexport default UserPlaces;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequest = useRef([]);\n\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setIsLoading(true);\n\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequest.current.push(httpAbortCtrl);\n\n    try {\n      const response = await fetch(url, { method, body, headers, signal: httpAbortCtrl.signal });\n      const responseData = await response.json();\n\n      activeHttpRequest.current = activeHttpRequest.current.filter(\n        (reqCtrl) => reqCtrl !== httpAbortCtrl,\n      );\n\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      setIsLoading(false);\n      return responseData;\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n      throw error;\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Backdrop from '../UIElements/Backdrop';\nimport './Modal.css';\n\nfunction ModalOverlay(props) {\n  const content = (\n    <div className={`modal ${props.contentClass}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault()}>\n        <div className={`modal__content ${props.contentClass}`}>{props.children}</div>\n        <footer className={`modal__footer ${props.footerClass}`}>{props.footer}</footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n}\n\nfunction Modal(props) {\n  return (\n    <>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </>\n  );\n}\n\nexport default Modal;\n"],"sourceRoot":""}